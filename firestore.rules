rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid));
    }
    
    function isCso() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/csoUsers/$(request.auth.uid));
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Applications collection
    match /applications/{applicationId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin() || isCso());
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin() || isCso());
      allow delete: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || isCso();
    }
    
    // Admin users collection
    match /adminUsers/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // CSO users collection
    match /csoUsers/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Stats collection
    match /stats/{statId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Queues collection
    match /queues/{queueId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() || isCso();
    }
  }
}